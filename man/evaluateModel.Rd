% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Evaluation.R
\name{evaluateModel}
\alias{evaluateModel}
\title{Evaluate Model}
\usage{
evaluateModel(ModelResult, train, test, predictmode = "regression")
}
\arguments{
\item{ModelResult}{Model result.}

\item{train}{Train Data.}

\item{test}{Test Data.}

\item{predictmode}{Type of model,regression or classification.}
}
\value{
Return model evaluate metrics.
}
\description{
Evaluate model.
}
\examples{
library(bupar)
library(ppmr)
eventdata <- enrichEventlog(eventLog = patients,prefix_num = 4,mode = "activity")
enrichEventlogEncoding <- lastStateEncoding(prefix_eventLog = eventdata)
enrichEventlogEncoding.1 <- enrichEventlogEncoding \%>\% as.data.frame()
enrichEventlogEncoding.1 <- enrichEventlogEncoding.1 \%>\% select(-patient,-handling_id,-.order,-registration_type)
library(lubridate)
enrichEventlogEncoding.1 <- enrichEventlogEncoding.1 \%>\% mutate(year=year(time),month=month(time),day = day(time),week = week(time),hour = hour(time))
enrichEventlogEncoding.1 <- enrichEventlogEncoding.1 \%>\% select(-time)
enrichEventlogEncoding.1 <- enrichEventlogEncoding.1 \%>\% filter(!is.na(predictor))
enrichEventlogEncoding.1$predictor <- enrichEventlogEncoding.1$predictor \%>\% as.character() \%>\% as.factor()
EventLogModel <- BuildModel(TheModel = rand_forest,engine = "ranger",PrefixData = enrichEventlogEncoding.1,predictmode = "classification")
pre <- predict(object = x[[3]], x[["test"]],type = "class")
result <- evaluateModel(ModelResult = EventLogModel[[3]],train = EventLogModel[[1]],test = EventLogModel[[2]],predictmode = "classification"
}
